{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n/**\n * Copyright (c) 2002-2019 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A facility to select most appropriate reader or writer among the given addresses for request processing.\n */\n\n\nvar LoadBalancingStrategy =\n/*#__PURE__*/\nfunction () {\n  function LoadBalancingStrategy() {\n    (0, _classCallCheck2[\"default\"])(this, LoadBalancingStrategy);\n  }\n\n  (0, _createClass2[\"default\"])(LoadBalancingStrategy, [{\n    key: \"selectReader\",\n\n    /**\n     * Select next most appropriate reader from the list of given readers.\n     * @param {string[]} knownReaders an array of currently known readers to select from.\n     * @return {string} most appropriate reader or `null` if given array is empty.\n     */\n    value: function selectReader(knownReaders) {\n      throw new Error('Abstract function');\n    }\n    /**\n     * Select next most appropriate writer from the list of given writers.\n     * @param {string[]} knownWriters an array of currently known writers to select from.\n     * @return {string} most appropriate writer or `null` if given array is empty.\n     */\n\n  }, {\n    key: \"selectWriter\",\n    value: function selectWriter(knownWriters) {\n      throw new Error('Abstract function');\n    }\n  }]);\n  return LoadBalancingStrategy;\n}();\n\nexports[\"default\"] = LoadBalancingStrategy;","map":null,"metadata":{},"sourceType":"script"}