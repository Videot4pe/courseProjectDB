{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _browserBuf = _interopRequireDefault(require(\"../browser/browser-buf\"));\n\nvar _textEncodingUtf = require(\"text-encoding-utf-8\");\n/**\n * Copyright (c) 2002-2019 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar encoder = new _textEncodingUtf.TextEncoder('utf-8');\nvar decoder = new _textEncodingUtf.TextDecoder('utf-8');\n\nfunction encode(str) {\n  return new _browserBuf[\"default\"](encoder.encode(str).buffer);\n}\n\nfunction decode(buffer, length) {\n  if (buffer instanceof _browserBuf[\"default\"]) {\n    return decoder.decode(buffer.readView(Math.min(length, buffer.length - buffer.position)));\n  } else {\n    // Copy the given buffer into a regular buffer and decode that\n    var tmpBuf = new _browserBuf[\"default\"](length);\n\n    for (var i = 0; i < length; i++) {\n      tmpBuf.writeUInt8(buffer.readUInt8());\n    }\n\n    tmpBuf.reset();\n    return decoder.decode(tmpBuf.readView(length));\n  }\n}\n\nvar _default = {\n  encode: encode,\n  decode: decode\n};\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}