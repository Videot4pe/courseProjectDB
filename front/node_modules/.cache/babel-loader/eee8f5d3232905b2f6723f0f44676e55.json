{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.LEAST_CONNECTED_STRATEGY_NAME = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _roundRobinArrayIndex = _interopRequireDefault(require(\"./round-robin-array-index\"));\n\nvar _loadBalancingStrategy = _interopRequireDefault(require(\"./load-balancing-strategy\"));\n/**\n * Copyright (c) 2002-2019 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar LEAST_CONNECTED_STRATEGY_NAME = 'least_connected';\nexports.LEAST_CONNECTED_STRATEGY_NAME = LEAST_CONNECTED_STRATEGY_NAME;\n\nvar LeastConnectedLoadBalancingStrategy =\n/*#__PURE__*/\nfunction (_LoadBalancingStrateg) {\n  (0, _inherits2[\"default\"])(LeastConnectedLoadBalancingStrategy, _LoadBalancingStrateg);\n  /**\n   * @constructor\n   * @param {Pool} connectionPool the connection pool of this driver.\n   */\n\n  function LeastConnectedLoadBalancingStrategy(connectionPool) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, LeastConnectedLoadBalancingStrategy);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(LeastConnectedLoadBalancingStrategy).call(this));\n    _this._readersIndex = new _roundRobinArrayIndex[\"default\"]();\n    _this._writersIndex = new _roundRobinArrayIndex[\"default\"]();\n    _this._connectionPool = connectionPool;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  (0, _createClass2[\"default\"])(LeastConnectedLoadBalancingStrategy, [{\n    key: \"selectReader\",\n    value: function selectReader(knownReaders) {\n      return this._select(knownReaders, this._readersIndex);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"selectWriter\",\n    value: function selectWriter(knownWriters) {\n      return this._select(knownWriters, this._writersIndex);\n    }\n  }, {\n    key: \"_select\",\n    value: function _select(addresses, roundRobinIndex) {\n      var length = addresses.length;\n\n      if (length === 0) {\n        return null;\n      } // choose start index for iteration in round-robin fashion\n\n\n      var startIndex = roundRobinIndex.next(length);\n      var index = startIndex;\n      var leastConnectedAddress = null;\n      var leastActiveConnections = Number.MAX_SAFE_INTEGER; // iterate over the array to find least connected address\n\n      do {\n        var address = addresses[index];\n\n        var activeConnections = this._connectionPool.activeResourceCount(address);\n\n        if (activeConnections < leastActiveConnections) {\n          leastConnectedAddress = address;\n          leastActiveConnections = activeConnections;\n        } // loop over to the start of the array when end is reached\n\n\n        if (index === length - 1) {\n          index = 0;\n        } else {\n          index++;\n        }\n      } while (index !== startIndex);\n\n      return leastConnectedAddress;\n    }\n  }]);\n  return LeastConnectedLoadBalancingStrategy;\n}(_loadBalancingStrategy[\"default\"]);\n\nexports[\"default\"] = LeastConnectedLoadBalancingStrategy;","map":null,"metadata":{},"sourceType":"script"}