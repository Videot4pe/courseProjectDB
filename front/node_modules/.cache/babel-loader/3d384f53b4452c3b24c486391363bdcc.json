{"ast":null,"code":"var _jsxFileName = \"/Users/garanya/Desktop/dbcourse/courseProjectDB/front/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callInit = async () => {\n      var response = await fetch('/init');\n      var body = await response.json();\n      this.state.cities = body;\n      var firstbox = document.getElementById('first');\n      var secondbox = document.getElementById('second');\n\n      for (var i = 0; i < this.state.cities.length; i++) {\n        var option = this.state.cities[i];\n        console.log(typeof this.state.cities[i]);\n        firstbox.options.add(new Option(option, i));\n        secondbox.options.add(new Option(option, i));\n      }\n    };\n\n    this.searchThis = async () => {\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cities: {\n            firstCity: this.state.firstCity,\n            secondCity: this.state.secondCity\n          }\n        })\n      });\n      const body = await response.json();\n      this.state.resultDist = \"Result distance: \" + body + \" km\";\n      this.forceUpdate();\n    };\n\n    this.add = async () => {\n      const response = await fetch('/add_city', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: \"Piter\"\n        })\n      });\n    };\n\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"\",\n      secondCity: \"\",\n      resultWay: \"\",\n      resultDist: \"Result distance: \",\n      cities: []\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.callInit);\n  }\n\n  search(event) {\n    this.state.firstCity = this.state.cities[document.getElementById(\"first\").value];\n    this.state.secondCity = this.state.cities[document.getElementById(\"second\").value];\n    this.searchThis();\n    this.forceUpdate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" From \"), \" \", React.createElement(\"select\", {\n      id: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" to \"), \" \", React.createElement(\"select\", {\n      id: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.add.bind(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Add city\"), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.resultDist));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garanya/Desktop/dbcourse/courseProjectDB/front/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","props","callInit","response","fetch","body","json","state","cities","firstbox","document","getElementById","secondbox","i","length","option","console","log","options","add","Option","searchThis","method","headers","JSON","stringify","firstCity","secondCity","resultDist","forceUpdate","name","showComponent","data","resultWay","componentDidMount","window","addEventListener","search","event","value","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"\",\n      secondCity: \"\",\n      resultWay: \"\",\n      resultDist: \"Result distance: \",\n      cities: [],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.callInit);\n  }\n\n  callInit = async () => {\n    var response = await fetch('/init')\n    var body = await response.json();\n    this.state.cities = body;\n\n    var firstbox = document.getElementById('first');\n    var secondbox = document.getElementById('second');\n\n    for(var i = 0; i < this.state.cities.length; i++){\n      var option = this.state.cities[i];\n      console.log(typeof this.state.cities[i]);\n      firstbox.options.add(new Option(option, i) );\n      secondbox.options.add(new Option(option, i) );\n    }\n  };\n\n  searchThis = async () => {\n    const response = await fetch('/', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        cities: {\n            firstCity: this.state.firstCity,\n            secondCity: this.state.secondCity\n        }\n      })\n    });\n    const body = await response.json();\n    this.state.resultDist = \"Result distance: \" + body + \" km\";\n    this.forceUpdate();\n  };\n\n  search(event) {\n    this.state.firstCity = this.state.cities[document.getElementById(\"first\").value]; \n    this.state.secondCity = this.state.cities[document.getElementById(\"second\").value]; \n\n    this.searchThis();    \n    this.forceUpdate();\n  }\n\n  add = async () => {\n    const response = await fetch('/add_city', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        name: \"Piter\"\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <span> From </span> <select id=\"first\"></select> <span> to </span> <select id=\"second\"></select>\n\n        <br /><br /><button onClick={this.search.bind(this)}>Search</button>\n\n        {/* <input type=\"text\" id=\"name1\" onChange={this.firstTextField.bind(this)} />\n        <input type=\"text\" id=\"name2\" onChange={this.secondTextField.bind(this)} />\n        <button onClick={this.search.bind(this)}>search</button> */}\n        \n        <br /><br /><button onClick={this.add.bind()}>Add city</button>\n\n        <p className=\"App-intro\">{this.state.resultDist}</p>\n\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header> */}\n      </div>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}