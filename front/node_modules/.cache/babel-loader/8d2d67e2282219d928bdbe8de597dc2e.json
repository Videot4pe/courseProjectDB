{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _baseHostNameResolver = _interopRequireDefault(require(\"../resolver/base-host-name-resolver\"));\n/**\n * Copyright (c) 2002-2019 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar BrowserHostNameResolver =\n/*#__PURE__*/\nfunction (_BaseHostNameResolver) {\n  (0, _inherits2[\"default\"])(BrowserHostNameResolver, _BaseHostNameResolver);\n\n  function BrowserHostNameResolver() {\n    (0, _classCallCheck2[\"default\"])(this, BrowserHostNameResolver);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(BrowserHostNameResolver).apply(this, arguments));\n  }\n\n  (0, _createClass2[\"default\"])(BrowserHostNameResolver, [{\n    key: \"resolve\",\n    value: function resolve(address) {\n      return this._resolveToItself(address);\n    }\n  }]);\n  return BrowserHostNameResolver;\n}(_baseHostNameResolver[\"default\"]);\n\nexports[\"default\"] = BrowserHostNameResolver;","map":null,"metadata":{},"sourceType":"script"}