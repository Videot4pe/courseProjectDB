{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _util = require(\"./util\");\n\nvar _urlUtil = _interopRequireDefault(require(\"./url-util\"));\n/**\n * Copyright (c) 2002-2019 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ServerAddress =\n/*#__PURE__*/\nfunction () {\n  function ServerAddress(host, resolved, port, hostPort) {\n    (0, _classCallCheck2[\"default\"])(this, ServerAddress);\n    this._host = (0, _util.assertString)(host, 'host');\n    this._resolved = resolved ? (0, _util.assertString)(resolved, 'resolved') : null;\n    this._port = (0, _util.assertNumber)(port, 'port');\n    this._hostPort = hostPort;\n    this._stringValue = resolved ? \"\".concat(hostPort, \"(\").concat(resolved, \")\") : \"\".concat(hostPort);\n  }\n\n  (0, _createClass2[\"default\"])(ServerAddress, [{\n    key: \"host\",\n    value: function host() {\n      return this._host;\n    }\n  }, {\n    key: \"resolvedHost\",\n    value: function resolvedHost() {\n      return this._resolved ? this._resolved : this._host;\n    }\n  }, {\n    key: \"port\",\n    value: function port() {\n      return this._port;\n    }\n  }, {\n    key: \"resolveWith\",\n    value: function resolveWith(resolved) {\n      return new ServerAddress(this._host, resolved, this._port, this._hostPort);\n    }\n  }, {\n    key: \"asHostPort\",\n    value: function asHostPort() {\n      return this._hostPort;\n    }\n  }, {\n    key: \"asKey\",\n    value: function asKey() {\n      return this._hostPort;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this._stringValue;\n    }\n  }], [{\n    key: \"fromUrl\",\n    value: function fromUrl(url) {\n      var urlParsed = _urlUtil[\"default\"].parseDatabaseUrl(url);\n\n      return new ServerAddress(urlParsed.host, null, urlParsed.port, urlParsed.hostAndPort);\n    }\n  }]);\n  return ServerAddress;\n}();\n\nexports[\"default\"] = ServerAddress;","map":null,"metadata":{},"sourceType":"script"}