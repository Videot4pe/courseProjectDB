{"ast":null,"code":"var _jsxFileName = \"/Users/garanya/Desktop/course/front/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      this.state.data = body; //console.log(this.data);\n\n      return body;\n    };\n\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"Moscow\",\n      secondCity: \"London\"\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  _callBackendCity(event) {\n    // const response = await fetch('/backend'); {/* тут надо передать параметры (2 города) */}\n    // const body = await response.json();\n    // if (response.status !== 200) {\n    //   throw Error(body.message) \n    // }\n    console.log('FUCK');\n    this.setState({\n      showComponent: true\n    }); //this.forceUpdate();\n    //return body;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: input => this.state.firstCity = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      ref: input => this.state.secondCity = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this._callBackendCity(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"City\"), this.showComponent ? React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.data) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garanya/Desktop/course/front/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","state","data","showComponent","firstCity","secondCity","componentDidMount","then","res","setState","express","catch","err","console","log","_callBackendCity","event","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,cAjBmB,GAiBF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,WAAKC,KAAL,CAAWC,IAAX,GAAkBN,IAAlB,CAP2B,CAQ3B;;AACA,aAAOA,IAAP;AACD,KA3BkB;;AAEjB,SAAKK,KAAL,GAAa;AACXE,MAAAA,aAAa,EAAE,KADJ;AAEXD,MAAAA,IAAI,EAAE,IAFK;AAGXE,MAAAA,SAAS,EAAE,QAHA;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAOD;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACF,SAAKb,cAAL,GACGc,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAEM,GAAG,CAACE;AAAZ,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAhByB,CAiBxB;;;AAaFG,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB;AACA;AAEA;AACA;AACA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAKL,QAAL,CAAc;AAACN,MAAAA,aAAa,EAAE;AAAhB,KAAd,EARsB,CAStB;AACA;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAGC,KAAD,IAAW,KAAKjB,KAAL,CAAWG,SAAX,GAAuBc,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAGA,KAAD,IAAW,KAAKjB,KAAL,CAAWI,UAAX,GAAwBa,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKH,gBAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKG,KAAKZ,aAAL,GACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKF,KAAL,CAAWC,IAArC,CADF,GAEE,IAPL,CADF;AAiBD;;AA7DyB;;AAgE5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"Moscow\",\n      secondCity: \"London\",\n    };\n    \n  }\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    this.state.data = body;\n    //console.log(this.data);\n    return body;\n  };\n\n  _callBackendCity(event) {\n    // const response = await fetch('/backend'); {/* тут надо передать параметры (2 города) */}\n    // const body = await response.json();\n\n    // if (response.status !== 200) {\n    //   throw Error(body.message) \n    // }\n    console.log('FUCK');\n    this.setState({showComponent: true});\n    //this.forceUpdate();\n    //return body;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <input type=\"text\" ref={(input) => this.state.firstCity = input} />\n          <input type=\"text\" ref={(input) => this.state.secondCity = input} />\n\n          <button onClick={this._callBackendCity()}>City</button>\n        {this.showComponent ?\n           <p className=\"App-intro\">{this.state.data}</p> :\n           null\n        }\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header> */}\n      </div>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}