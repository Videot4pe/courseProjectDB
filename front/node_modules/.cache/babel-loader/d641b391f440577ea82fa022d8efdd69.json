{"ast":null,"code":"var _jsxFileName = \"/Users/garanya/Desktop/dbcourse/courseProjectDB/front/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callInit = async () => {\n      var response = await fetch('/init');\n      var body = await response.json();\n      this.state.cities = body;\n      var firstbox = document.getElementById('first');\n      var secondbox = document.getElementById('second');\n\n      for (var i = 0; i < this.state.cities.length; i++) {\n        var option = this.state.cities[i];\n        console.log(typeof this.state.cities[i]);\n        firstbox.options.add(new Option(option, i));\n        secondbox.options.add(new Option(option, i));\n      }\n    };\n\n    this.searchThis = async () => {\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cities: {\n            firstCity: this.state.firstCity,\n            secondCity: this.state.secondCity\n          }\n        })\n      });\n      const body = await response.json();\n      this.state.resultDist = \"Result distance = \" + body + \" km\";\n      this.forceUpdate();\n    };\n\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"\",\n      secondCity: \"\",\n      resultWay: \"\",\n      resultDist: \"\",\n      cities: []\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.callInit);\n  }\n\n  firstTextField(event) {\n    this.state.firstCity = event.target.value;\n    this.forceUpdate(); //this.search(this);\n  }\n\n  secondTextField(event) {\n    this.state.secondCity = event.target.value;\n    this.forceUpdate(); //this.search(this);\n  }\n\n  search(event) {\n    // const response = await fetch('/backend'); {/* тут надо передать параметры (2 города) */}\n    // const body = await response.json();\n    // if (response.status !== 200) {\n    //   throw Error(body.message) \n    // }\n    // Тут мне нужно вернуть json с путем, и сконвертировать его в строку формата (город -(расстояние)-> город -...) +\n    // Возможно добавление кнопки \"альтернативные варианты\"\n    // Если быстро сделаю, можно добавить поездом/самолетом, или типа того\n    // Прежде всего необходимо реализовать алгоритм дейкстры, отправлять и парсить запрос + , получать и парсить ответ + , +\n    // потом заполнить базу (разобраться с csv???). Сделать дизайн, возможно разобрарться с bootstrap?\n    // Уже после этого можно попытаться добавить разделение на транспортные затраты или предпочтительный вид передвижения\n    this.state.firstCity = this.state.cities[document.getElementById(\"first\").value];\n    this.state.firstCity = this.state.cities[document.getElementById(\"second\").value];\n    console.log(this.state.cities[document.getElementById(\"first\").value]);\n    this.searchThis();\n    this.forceUpdate();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"search\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name1\",\n      onChange: this.firstTextField.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name2\",\n      onChange: this.secondTextField.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"search\"), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.firstCity, \" -> \", this.state.secondCity), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.resultWay), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.resultDist));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garanya/Desktop/dbcourse/courseProjectDB/front/src/App.js"],"names":["React","Component","ReactDOM","App","constructor","props","callInit","response","fetch","body","json","state","cities","firstbox","document","getElementById","secondbox","i","length","option","console","log","options","add","Option","searchThis","method","headers","JSON","stringify","firstCity","secondCity","resultDist","forceUpdate","showComponent","data","resultWay","componentDidMount","window","addEventListener","firstTextField","event","target","value","secondTextField","search","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showComponent: false,\n      data: null,\n      firstCity: \"\",\n      secondCity: \"\",\n      resultWay: \"\",\n      resultDist: \"\",\n      cities: [],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.callInit);\n  }\n\n  callInit = async () => {\n    var response = await fetch('/init')\n    var body = await response.json();\n    this.state.cities = body;\n\n    var firstbox = document.getElementById('first');\n    var secondbox = document.getElementById('second');\n\n    for(var i = 0; i < this.state.cities.length; i++){\n      var option = this.state.cities[i];\n      console.log(typeof this.state.cities[i]);\n      firstbox.options.add(new Option(option, i) );\n      secondbox.options.add(new Option(option, i) );\n    }\n  };\n\n  firstTextField(event) {\n    this.state.firstCity = event.target.value;\n    this.forceUpdate();\n    //this.search(this);\n  }\n  secondTextField(event) {\n    this.state.secondCity = event.target.value;\n    this.forceUpdate();\n    //this.search(this);\n  }\n\n  searchThis = async () => {\n    const response = await fetch('/', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        cities: {\n            firstCity: this.state.firstCity,\n            secondCity: this.state.secondCity\n        }\n      })\n    });\n    const body = await response.json();\n    this.state.resultDist = \"Result distance = \" + body + \" km\";\n    this.forceUpdate();\n  };\n\n  search(event) {\n    // const response = await fetch('/backend'); {/* тут надо передать параметры (2 города) */}\n    // const body = await response.json();\n\n    // if (response.status !== 200) {\n    //   throw Error(body.message) \n    // }\n\n    // Тут мне нужно вернуть json с путем, и сконвертировать его в строку формата (город -(расстояние)-> город -...) +\n\n    // Возможно добавление кнопки \"альтернативные варианты\"\n    // Если быстро сделаю, можно добавить поездом/самолетом, или типа того\n\n    // Прежде всего необходимо реализовать алгоритм дейкстры, отправлять и парсить запрос + , получать и парсить ответ + , +\n    // потом заполнить базу (разобраться с csv???). Сделать дизайн, возможно разобрарться с bootstrap?\n    // Уже после этого можно попытаться добавить разделение на транспортные затраты или предпочтительный вид передвижения\n    this.state.firstCity = this.state.cities[document.getElementById(\"first\").value]; \n    this.state.firstCity = this.state.cities[document.getElementById(\"second\").value]; \n\n    console.log(this.state.cities[document.getElementById(\"first\").value]);\n    this.searchThis();    \n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <select id=\"first\"></select>\n        <select id=\"second\"></select>\n        <button onClick={this.search.bind(this)}>search</button>\n\n\n        <input type=\"text\" id=\"name1\" onChange={this.firstTextField.bind(this)} />\n        <input type=\"text\" id=\"name2\" onChange={this.secondTextField.bind(this)} />\n        <button onClick={this.search.bind(this)}>search</button>\n        <p className=\"App-intro\">{this.state.firstCity} -> {this.state.secondCity}</p>\n        <p className=\"App-intro\">{this.state.resultWay}</p>\n        <p className=\"App-intro\">{this.state.resultDist}</p>\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to React</h1>\n        </header> */}\n      </div>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}